Ž     1 top.sv    Ž     2 rv32ui-p-add.hex    Ž     3 top_tb.sv    Ž     4 ram.sv    Ž     5 ram_tb.sv    Ž     6 Makefile    Ž
  1 `include "pc.sv"                                                          |  1 `include "ram.sv"                                                          |  1 `ifndef __RAM_SV                                                          |  1 # e.x.: make test_pc
  2 `include "registers.sv"                                                   |  2                                                                            |  2 `define __RAM_SV                                                          |  2 test_%: dist/%_tb
  3 `include "alu.sv"                                                         |  3 module ram_tb();                                                           |  3                                                                           |  3 > vvp $^
  4 `include "decoder.sv"                                                     |  4   logic clk, we;                                                           |  4 module ram #(                                                             |  4
  5 `include "ram.sv"                                                         |  5   logic [31:0] addr, mem_wd, mem_rd;                                       |  5   parameter int MEM_SIZE, // RAM size in bytes                            |  5 dist/%: %.sv
  6 `include "controller.sv"                                                  |  6                                                                            |  6   parameter int START_ADDR = 32'h8000_0000 // Start address               |  6 > iverilog -g2012 -o $@ $^
  7 `include "types.sv"                                                       |  7   ram #(.MEM_SIZE(1024)) ram0(                                             |  7 ) (                                                                       |~
  8 `include "csr.sv"                                                         |  8     .clk      (clk),                                                       |  8   input logic clk, // Clock                                               |~
  9                                                                           |  9     // port 2                                                              |  9   // port 1                                                               |~
 10 module top #(                                                             | 10     .addr2    (addr),                                                      | 10   input logic [31:0] addr1, // Address                                    |~
 11   parameter PC_INIT = 32'h8000_0000,                                      | 11     .we2      (we),                                                        | 11   output logic [31:0] rd1, // Read data 1                                 |~
 12   parameter int MEM_SIZE                                                  | 12     .rd2      (mem_rd),                                                    | 12   // port 2                                                               |~
 13 ) (                                                                       | 13     .wd2      (mem_wd)                                                     | 13   input logic [31:0] addr2, // Address                                    |~
 14   input wire clk,                                                         | 14   );                                                                       | 14   output logic [31:0] rd2, // Read data 2                                 |~
 15   input wire rst_n                                                        | 15                                                                            | 15   input logic we2, // Write enable                                        |~
 16 );                                                                        | 16   initial begin                                                            | 16   input logic [31:0] wd2, // Write data                                   |~
 17   pc #(.PC_INIT(PC_INIT)) pc0(                                            | 17     $dumpfile("dist/ram_tb.vcd");                                          | 17   // for simulation                                                       |~
 18     .clk(clk),                                                            | 18     $dumpvars(0, ram_tb);                                                  | 18   input logic [31:0] dbg_addr, // debug address                           |~
 19     .rst_n(rst_n)                                                         | 19                                                                            | 19   output logic [31:0] dbg_rd // debug read data                           |~
 20   );                                                                      | 20     $readmemh("../tests/isa/rv32ui-p-add.hex", ram0.mem);                  | 20 );                                                                        |~
 21                                                                           | 21                                                                            | 21   // Memory array                                                         |~
 22   // Instantiate RAM                                                      | 22     // initialize signals                                                  | 22   logic [7:0] mem[START_ADDR:START_ADDR+MEM_SIZE-1];                      |~
 23   ram #(.MEM_SIZE(MEM_SIZE)) ram0(                                        | 23     clk = 0; we = 0; addr = 0; mem_wd = 0;                                 | 23                                                                           |~
 24     .clk(clk),                                                            | 24                                                                            | 24   // Read operation                                                       |~
 25     .rst_n(rst_n)                                                         | 25     // read data                                                           | 25   assign rd1 = {mem[addr1+3], mem[addr1+2], mem[addr1+1], mem[addr1]};    |~
 26   );                                                                      | 26     we = 0; addr = 32'h8000_0000;                                          | 26   assign rd2 = {mem[addr2+3], mem[addr2+2], mem[addr2+1], mem[addr2]};    |~
 27                                                                           | 27     #10;                                                                   | 27   assign dbg_rd = {mem[dbg_addr+3], mem[dbg_addr+2], mem[dbg_addr+1], mem[|~
 28   // RAMKÿ‰ÿ}ÿäÿ’ÿ­ÿÿúÿWÿ                                                | 28     assert(mem_rd == 32'h7654_3210);                                       |    dbg_addr]};                                                               |~
 29   assign ram0.addr1 = pc0.pc;                                             | 29                                                                            | 28                                                                           |~
 30                                                                           | 30     // write data                                                          | 29   // Write operation                                                      |~
 31   // Instantiate decoder                                                  | 31     we = 1; addr = 32'h8000_0000; mem_wd = 32'h1234_5678; clk = 1;         | 30   always_ff @(posedge clk) begin                                          |~
 32   decoder dec0(.instr(ram0.rd1));                                         | 32     #10;                                                                   | 31     if (we2) begin                                                        |~
 33                                                                           | 33                                                                            | 32       mem[addr2] <= wd2[7:0];                                             |~
 34   // Instantiate registers module                                         | 34     // read data                                                           | 33       mem[addr2+1] <= wd2[15:8];                                          |~
 35   registers regs0(                                                        | 35     we = 0; addr = 32'h8000_0000; clk = 0;                                 | 34       mem[addr2+2] <= wd2[23:16];                                         |~
 36     .clk(clk),                                                            | 36     #10;                                                                   | 35       mem[addr2+3] <= wd2[31:24];                                         |~
 37     .rst_n(rst_n),                                                        | 37     assert(mem_rd == 32'h1234_5678);                                       | 36     end                                                                   |~
 38     .a1(dec0.rs1),                                                        | 38   end                                                                      | 37   end                                                                     |~
 39     .a2(dec0.rs2),                                                        | 39 endmodule                                                                  | 38 endmodule                                                                 |~
 40     .a3(dec0.rd)                                                          |~                                                                              | 39                                                                           |~
 41   );                                                                      |~                                                                              | 40 `endif                                                                    |~
 42                                                                           |~                                                                              |~                                                                             |~
 43   // Instantiate CSR module                                               |~                                                                              |~                                                                             |~
 44   csr csr0(                                                               |~                                                                              |~                                                                             |~
 45     .clk(clk)                                                             |~                                                                              |~                                                                             |~
 46   );                                                                      |~                                                                              |~                                                                             |~
 47                                                                           |~                                                                              |~                                                                             |~
 48   // Instantiate ALU module                                               |~                                                                              |~                                                                             |~
 49   alu alu0();                                                             |~                                                                              |~                                                                             |~
 50                                                                           |~                                                                              |~                                                                             |~
 51   // Instantiate controller module                                        |~                                                                              |~                                                                             |~
 52   controller controller0(                                                 |~                                                                              |~                                                                             |~
 53     .opcode(dec0.opcode),                                                 |~                                                                              |~                                                                             |~
 54     .funct3(dec0.funct3),                                                 |~                                                                              |~                                                                             |~
 55     .funct7(dec0.funct7),                                                 |~                                                                              |~                                                                             |~
 56     .imm_i(dec0.imm_i),                                                   |~                                                                              |~                                                                             |~
 57     .imm_s(dec0.imm_s),                                                   |~                                                                              |~                                                                             |~
 58     .imm_b(dec0.imm_b),                                                   |~                                                                              |~                                                                             |~
 59     .imm_u(dec0.imm_u),                                                   |~                                                                              |~                                                                             |~
 60     .imm_j(dec0.imm_j),                                                   |~                                                                              |~                                                                             |~
 61     .rs1_rd(regs0.rd1),                                                   |~                                                                              |~                                                                             |~
 62     .rs2_rd(regs0.rd2),                                                   |~                                                                              |~                                                                             |~
 63     .pc(pc0.pc)                                                           |~                                                                              |~                                                                             |~
 64   );                                                                      |~                                                                              |~                                                                             |~
 65                                                                           |~                                                                              |~                                                                             |~
 66   // PCnÿôÿ°ÿ                                                             |~                                                                              |~                                                                             |~
 67   assign pc0.pc_next = controller0.pc_next;                               |~                                                                              |~                                                                             |~
 68                                                                           |~                                                                              |~                                                                             |~
 69   // ALUhÿcontrollernÿKÿNÿSÿÿ                                            |~                                                                              |~                                                                             |~
 70   assign alu0.src_a = controller0.alu_src_a;                              |~                                                                              |~                                                                             |~
 71   assign alu0.src_b = controller0.alu_src_b;                              |~                                                                              |~                                                                             |~
 72   assign alu0.alu_op = controller0.alu_op;                                |~                                                                              |~                                                                             |~
 73   assign controller0.alu_out = alu0.result;                               |~                                                                              |~                                                                             |~
 74                                                                           |~                                                                              |~                                                                             |~
 75   // áÿâÿêÿhÿcontrollernÿKÿNÿSÿÿ                                         |~                                                                              |~                                                                             |~
 76   assign ram0.addr2 = controller0.mem_addr;                               |~                                                                              |~                                                                             |~
 77   assign ram0.we2 = controller0.mem_we;                                   |~                                                                              |~                                                                             |~
 78   assign ram0.wd2 = controller0.mem_wd;                                   |~                                                                              |~                                                                             |~
 79   assign controller0.mem_out = ram0.rd2;                                  |~                                                                              |~                                                                             |~
 80                                                                           |~                                                                              |~                                                                             |~
 81   // rdìÿ¸ÿ¹ÿ¿ÿhÿcontrollernÿKÿNÿSÿÿ                                     |~                                                                              |~                                                                             |~
 82   assign regs0.we3 = controller0.rd_we;                                   |~                                                                              |~                                                                             |~
 83   assign regs0.wd3 = controller0.rd_wd;                                   |~                                                                              |~                                                                             |~
 84                                                                           |~                                                                              |~                                                                             |~
 85   // CSRhÿcontrollernÿKÿNÿSÿÿ                                            |~                                                                              |~                                                                             |~
 86   assign csr0.csr_addr = controller0.csr_addr;                            |~                                                                              |~                                                                             |~
 87   assign csr0.csr_we = controller0.csr_we;                                |~                                                                              |~                                                                             |~
 88   assign csr0.csr_wd = controller0.csr_wd;                                |~                                                                              |~                                                                             |~
 89   assign controller0.csr_rd = csr0.csr_rd;                                |~                                                                              |~                                                                             |~
 90 endmodule                                                                 |~                                                                              |~                                                                             |~
top.sv                                                      1,1           hÿfÿ ram_tb.sv                                                    20,56         hÿfÿ ram.sv                                                      6,34          hÿfÿ Makefile                                                    5,1           hÿfÿ
"ram.sv" 40L, 1125B øÿ¼ÿÿ
